name: Django CI

on:
  push:
    branches: [ "main" ]
   
env:
  DJANGO_ALLOWED_HOSTS: ${{ vars.DJANGO_ALLOWED_HOSTS }}
  SQL_ENGINE: django.db.backends.sqlite3
  SQL_DATABASE: test.db
  SECRET_KEY: ${{ vars.DJANGO_SECRET_KEY }}
  DEBUG: ${{vars.DEBUG}}
  SSH_KEY: ${{vars.SSH_KEY}}
  SSH_KEY_PUB: ${{vars.SSH_KEY_PUB}}
  USER: ${{vars.SSH_USER}}
  HOST: ${{vars.SSH_HOST}}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: check ssh connection
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.DO_SECRET }}" > ~/.ssh/private.key
        chmod 600 ~/.ssh/private.key
        ssh -i ~/.ssh/private.key -o "StrictHostKeyChecking no" dimtri@161.35.208.55 cd gavr && ls -l

#    - uses: actions/checkout@v3
#    - uses: browser-actions/setup-chrome@v1
#    - name: install java
#      run: sudo apt-get install default-jre
#    - name: Set up Python
#      uses: actions/setup-python@v3
#      with:
#        python-version: '3.10'
#        cache: 'pip'
#        cache-dependency-path: '**/requirements.txt'
#    - name: Install Dependencies
#      run: |
#        python -m pip install --upgrade pip
#        pip install -r requirements.txt
#    - name: Make migrations
#      run: |
#        python manage.py makemigrations accounts
#        python manage.py makemigrations
#    - name: Migrate
#      run: python manage.py migrate
#    - name: Run server
#      run: gunicorn gavr.wsgi --daemon
#    - name: Install curl
#      run: sudo apt-get install curl
#    - name: Health check
#      run: curl localhost:8000
#    - name: Run Tests
#      run: |
#        pytest -sv --tb=short --alluredir=allure_results
#    - name: Install allure
#      if: always()
#      run: npm install -g allure-commandline --save-dev
#    - name: Generate allure report
#      if: always()
#      run: allure generate allure_results/ -o allure_report
#    - name: Upload allure
#      if: always()
#      uses: actions/upload-artifact@v3
#      with:
#        name: upload_allure
#        path: ./allure_report
